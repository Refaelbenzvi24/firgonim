import {type NextPage} from "next";
import Head from "next/head";
import IconPhUser from '~icons/ph/user.jsx'

import {api} from "../utils/api";
import {Button, Card, TextField, theme, Typography} from "../components/UI";
import {useRouter} from "next/router";
import {type SubmitHandler, useForm} from "react-hook-form";
import {zodResolver} from "@hookform/resolvers/zod";
import {z} from "zod";
import {feedbackBaseObject} from "../shared/validations/feedback";
import Link from "next/link";

const feedbackValidation = z.object(feedbackBaseObject)

type feedbackValidationSchema = z.infer<typeof feedbackValidation>;

const Home: NextPage = () => {
	const router = useRouter()
	const profileId = router.query.profile as string
	const profile = api.profile.getById.useQuery(profileId);
	const createFeedback = api.feedback.create.useMutation()
	const utils = api.useContext();
	
	const {handleSubmit, reset, formState: {errors}, register} = useForm<feedbackValidationSchema>({
		resolver: zodResolver(feedbackValidation)
	})
	
	const onSubmit: SubmitHandler<feedbackValidationSchema> = (data) => {
		createFeedback.mutate({
			...data,
			profile: profileId
		}, {
			onSuccess: () => {
				reset();
				void utils.profile.getById.invalidate()
			}
		})
	}
	
	return (
		<>
			<Head>
				<title>Firgonim</title>
				<meta name="description" content="Generated by create-t3-app"/>
				<link rel="icon" href="/public/favicon.ico"/>
			</Head>
			<main dir="rtl" className="flex min-h-screen flex-col bg-[#f5f6fa]">
				<div className="flex items-center justify-between fixed h-20 w-full bg-gray-200 px-4">
					<Link href={'/'}>
						<Typography variant={'h2'} color={theme.colors.dark_300}>
							פרגונים
						</Typography>
					</Link>
				</div>
				
				<div className="flex h-full pt-32">
					<div className={`flex lg:flex-row flex-col md:px-10 mx-auto lg:w-[1024px] xl:w-[1280px] md:w-[80%] sm:w-[80%] w-[100%]`}>
						
						<div className="px-4">
							<Card
								className={`flex p-4 flex-col items-center xl:mb-0 mb-8 lg:w-[250px]`}
								height="fit-content"
								minHeight="430px"
								width="w-full"
								noShadow>
								<div className="flex flex-col items-center">
									<div className="flex items-center justify-center mb-4 rounded-full bg-gray-200 h-20 w-20 text-3xl text-gray-500">
										<IconPhUser/>
									</div>
									
									<Typography variant={'h3'}>
										{profile.data?.name}
									</Typography>
									
									<Typography
										className="mt-2"
										weight={400}
										variant={'small'}
										color={theme.colors.gray_600}>
										{profile.data?.title}
									</Typography>
								</div>
								
								<div className="flex flex-col items-center mt-10">
									<Typography
										variant={'h3'}
										color={theme.colors.blue_500}>
										About
									</Typography>
									
									<Typography
										className="mt-4"
										centered
										weight={400}
										variant={'small'}>
										{profile.data?.description}
									</Typography>
								</div>
							</Card>
						</div>
						
						<div className="flex flex-col px-4 space-y-4 w-full">
							{(profile.data?.feedbacks && profile.data?.feedbacks.length > 0) && profile.data.feedbacks.map(feedback => (
								<Card
									className="p-4"
									width="100%"
									height="fit-content"
									key={feedback.id}
									noShadow>
									<div className="flex flex-col space-y-2 w-[50%]">
										<Typography variant={'body'} color={theme.colors.blue_500}>
											{feedback.subject}
										</Typography>
										
										<Typography
											weight={400}
											variant={'body'}>
											{feedback.description}
										</Typography>
									</div>
									
									<div className="flex justify-end">
										<Typography
											weight={400}
											color={theme.colors.gray_500}
											variant={'body'}>
											{feedback.feedbackerName}
										</Typography>
									</div>
								</Card>
							))}
							
							<div className="flex flex-col mx-auto py-10 w-[90%]">
								<Typography variant={'subtitle'}>
									הוסף פרגון
								</Typography>
								
								<form
									className="flex flex-col w-full"
									onSubmit={() => handleSubmit(onSubmit)}>
									<TextField
										noShadow
										label="נושא"
										error={!!errors.subject}
										helperText={errors.subject?.message}
										{...register('subject')}/>
									
									<TextField
										noShadow
										label="תיאור"
										error={!!errors.description}
										helperText={errors.description?.message}
										{...register('description')}/>
									
									<TextField
										noShadow
										label="שם נותן הפרגון"
										error={!!errors.feedbackerName}
										helperText={errors.feedbackerName?.message}
										{...register('feedbackerName')}/>
									
									<Button
										type="submit"
										noShadow>
										<Typography
											weight={400}
											color={theme.colors.gray_500}
											variant={'body'}>
											הוספת פירגון
										</Typography>
									</Button>
								</form>
							</div>
						</div>
					</div>
				</div>
			</main>
		</>
	)
}

export default Home;
